table(crime.red2$V3020)
crime.red2 <-
crime.red2 %>% mutate(
V3020 = replace(ifelse(
V3020 == "1:Elementary" |
V3020 == "3:Elementary" |
V3020 == "4:Elementary" |
V3020 == "5:Elementary" |
V3020 == "6:Elementary" |
V3020 == "7:Elementary" |
V3020 == "8:Elementary", "Grade 1-8", V3020)
)
)
crime.red2 <-
crime.red2 %>% mutate(
V3020 = ifelse(
V3020 == "1:Elementary" |
V3020 == "3:Elementary" |
V3020 == "4:Elementary" |
V3020 == "5:Elementary" |
V3020 == "6:Elementary" |
V3020 == "7:Elementary" |
V3020 == "8:Elementary", "Grade 1-8", V3020)
)
View(crime.red2)
crime.red2 <-
crime.red2 %>% mutate(
Education.Status = ifelse(
V3020 == "1:Elementary" |
V3020 == "3:Elementary" |
V3020 == "4:Elementary" |
V3020 == "5:Elementary" |
V3020 == "6:Elementary" |
V3020 == "7:Elementary" |
V3020 == "8:Elementary", "Grade 1-8", V3020)
)
crime.red2 <-
crime.red2 %>% mutate(
V3020 = ifelse(
V3020 == "1:Elementary" |
V3020 == "3:Elementary" |
V3020 == "4:Elementary" |
V3020 == "5:Elementary" |
V3020 == "6:Elementary" |
V3020 == "7:Elementary" |
V3020 == "8:Elementary", "Grade 1-8", V3020)
)
View(crime.red2)
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <-
crime.red2 %>% mutate(
Education = ifelse(
V3020 == "1:Elementary" |
V3020 == "3:Elementary" |
V3020 == "4:Elementary" |
V3020 == "5:Elementary" |
V3020 == "6:Elementary" |
V3020 == "7:Elementary" |
V3020 == "8:Elementary", "Grade 1-8", V3020)
)
View(crime.red2)
crime.red2 <-
crime.red2 %>% mutate(
V3020 = ifelse(
V3020 == "1:Elementary" |
V3020 == "3:Elementary" |
V3020 == "4:Elementary" |
V3020 == "5:Elementary" |
V3020 == "6:Elementary" |
V3020 == "7:Elementary" |
V3020 == "8:Elementary", "Grade 1-8", V3020)
)
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <-
crime.red2 %>% mutate(
V3020 = ifelse(
V3020 == "1:Elementary" |
V3020 == "3:Elementary" |
V3020 == "4:Elementary" |
V3020 == "5:Elementary" |
V3020 == "6:Elementary" |
V3020 == "7:Elementary" |
V3020 == "8:Elementary", "Grade 1-8", V3020)
)
View(crime.red2)
crime.red2 <-
crime.red2 %>% mutate(
as.character(V3020) = ifelse(
as.character(V3020)
as.character(crime.redV3020)
as.character(crime.red$V3020)
str(as.character(crime.red$V3020))
crime.red2 <-
crime.red2 %>% mutate(
V3020 = ifelse(
as.character(V3020) == "1:Elementary" |
as.character(V3020) == "3:Elementary" |
as.character(V3020) == "4:Elementary" |
as.character(V3020) == "5:Elementary" |
as.character(V3020) == "6:Elementary" |
as.character(V3020) == "7:Elementary" |
as.character(V3020) == "8:Elementary", "Grade 1-8", V3020)
)
View(crime.red2)
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <-
crime.red2 %>% mutate(
V3020 = if_else(
V3020 == "1:Elementary" |
V3020 == "3:Elementary" |
V3020 == "4:Elementary" |
V3020 == "5:Elementary" |
V3020 == "6:Elementary" |
V3020 == "7:Elementary" |
V3020 == "8:Elementary", "Grade 1-8", V3020)
)
crime.red2 <-
crime.red2 %>% mutate(
V3020 = recode(V3020 =
"c('1:Elementary', '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary') = 'Grade 1-8'")
)
crime.red2 <-
crime.red2 %>% mutate(
V3020 = recode(V3020,
"c('1:Elementary', '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary') = 'Grade 1-8'")
)
crime.red2 <- crime.red2 %>% mutate(V3020 = recode(V3020, "c('1:Elementary', '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary') = 'Grades 1-8'"))
recode(crime.red2$3020, "c('1:Elementary', '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary') = 'Grades 1-8'")
recode(crime.red2$V3020, "c('1:Elementary', '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary') = 'Grades 1-8'")
crime.red2 <- crime.red2 %>% mutate(V3020 = fct_collapse(V3020,'Grades 1-8' = c('1:Elementary', '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary')))
library(forcats)
crime.red2 <- crime.red2 %>% mutate(V3020 = fct_collapse(V3020,'Grades 1-8' = c('1:Elementary', '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary')))
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <-
crime.red2 %>% mutate(
V3020 = if_else(
V3020 == "1:Elementary" |
V3020 == "3:Elementary" |
V3020 == "4:Elementary" |
V3020 == "5:Elementary" |
V3020 == "6:Elementary" |
V3020 == "7:Elementary" |
V3020 == "8:Elementary", "Grade 1-8", V3020)
)
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <- crime.red2 %>% mutate(V3020 = fct_collapse(V3020,'Grades 1-8' = c('1:Elementary', '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary')))
crime.red2$V3020
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <- crime.red2 %>% mutate(V3020 = fct_collapse(V3020,Elementary.Middle= c('1:Elementary', '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary')))
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <- crime.red2 %>% mutate(V3020 = fct_collapse(V3020,Elementary.Middle= c("1:Elementary", '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary')))
View(crime.red2)
fct_collapse(crime.red2$V3020,Elementary.Middle = c("1:Elementary", '2:Elementary', '3:Elementary', '4:Elementary', '5:Elementary', '6:Elementary', '7:Elementary', '8:Elementary'))
crime.red2 <- crime.red2 %>% mutate(V3020 = fct_collapse(V3020,Elementary.Middle = c("(01) 1:Elementary", '(02) 2:Elementary', '(03) 3:Elementary', '(04) 4:Elementary', '(05) 5:Elementary', '(06) 6:Elementary', '(07) 7:Elementary', '(08) 8:Elementary')))
View(crime.red2)
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <- crime.red2 %>% mutate(V3020 = fct_collapse(V3020,Grades.1to8 = c("(01) 1:Elementary", '(02) 2:Elementary', '(03) 3:Elementary', '(04) 4:Elementary', '(05) 5:Elementary', '(06) 6:Elementary', '(07) 7:Elementary', '(08) 8:Elementary')))
View(crime.red2)
model12 <- glm(V4399 ~ ., data = crime.red2, family = binomial())
model2 <- glm(V4399 ~ ., data = crime.red2, family = binomial())
summary(model2)
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <-
crime.red2 %>% mutate(V3020 = fct_collapse(
V3020,
Mid.Elem = c(
"(01) 1:Elementary",
'(02) 2:Elementary',
'(03) 3:Elementary',
'(04) 4:Elementary',
'(05) 5:Elementary',
'(06) 6:Elementary',
'(07) 7:Elementary',
'(08) 8:Elementary'
)
))
View(crime.red2)
model2 <- glm(V4399 ~ ., data = crime.red2, family = binomial())
summary(model2)
summary(model1)
summary(model2)
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
crime.red2 <-
crime.red2 %>% mutate(V3020 = fct_collapse(
V3020,
Mid.Elem = c(
"(01) 1:Elementary",
'(02) 2:Elementary',
'(03) 3:Elementary',
'(04) 4:Elementary',
'(05) 5:Elementary',
'(06) 6:Elementary',
'(07) 7:Elementary',
'(08) 8:Elementary'
),
HS(no.diploma) = c(
crime.red2 <-
crime.red2 %>% mutate(V3020 = fct_collapse(
V3020,
Mid.Elem = c(
"(01) 1:Elementary",
'(02) 2:Elementary',
'(03) 3:Elementary',
'(04) 4:Elementary',
'(05) 5:Elementary',
'(06) 6:Elementary',
'(07) 7:Elementary',
'(08) 8:Elementary'
),
HS.no.diploma = c(
"(09) 9:High school",
"(10) 10:High school",
"(11) 11:High school",
"(27) 12th grade(no diploma)"
)
))
View(crime.red2)
model2 <- glm(V4399 ~ ., data = crime.red2, family = binomial())
summary(model2)
# Education is not signficant regardless, so we will drop it as well as Month of Interview Completed
crime.red3 <- select(crime.red,-c("V3020", "V3025"))
model3 <- glm(V4399 ~ ., data = crime.red3, family = binomial())
model3 <- glm(V4399 ~ ., data = crime.red3, family = binomial())
summary(model3)
# Education is not signficant regardless, so we will drop it as well as Month of Interview Completed
crime.red3 <- select(crime.red2,-c("V3020", "V3025"))
model3 <- glm(V4399 ~ ., data = crime.red3, family = binomial())
summary(model3)
# We will drop rows with "Don't know" or "Residue"
crime.red <-
crime.red %>% filter(
V3015 != "(8) Residue" &
V3020 != "(98) Residue" &
V3024 != "(8) Residue" &
V3044 != "(8) Residue" &
V3_V4526H3A != "(8) Residue" &
V3_V4526H3B != "(8) Residue" &
V3_V4526H5 != "(8) Residue" &
V3_V4526H4 != "(8) Residue" &
V3_V4526H6 != "(8) Residue" &
V3_V4526H7 != "(8) Residue" &
V3083 != "(8) Residue" &
V3084 != "(8) Residue" &
V3085 != "(8) Residue" &
V3086 != "(8) Residue" &
V3087 != "(8) Residue" &
V3079 != "(8) Residue" &
V3071 != "(8) Residue" &
V4399 != "(3) Don't know" & V4399 != "(8) Residue"
)
#View(crime.join)
# What values are in "V3001"
#table(crime.join$V3001) # just one value, drop it col # 3
# V3003 is the same as YEARQ, drop V3003, col # 6
#with(crime.join, table(YEARQ))
# We can drop the ID columns now, since the data is merged
# Lots of columns are strata numbers, which could be explored later, but for the purpose of this analysis, will not include
# V3006 Household number, could be interesting, ref codebook, not sure how to interpret yet
# 2 Age columns, drop the allocated one, they seem to be identical, same with sex (v3018), hispanic origin ("V3024A")
data.frame(crime.join$V3013, crime.join$V3014)
# Also drop V3026-27, month and year interview was completed
cols2drop <- c("IDHH", "IDPER", "V3001", "V3002", "V3003", "V3004", "V3005", "V3008", "V3009", "V3010", "V3014","V3016", "V3018", "V3024A", "V3026", "V3027","V3060", "V3069", "V3082", "WGTPERCY", "PER_TIS", "PERBOUNDED")
# Count the NAs in all columns and find what is the proportion of them to the entire data set
NAprop <- crime.join %>% select(everything()) %>% summarise_all(funs(sum(is.na(.)) / nrow(crime.join)))
# Find all the columns where more than 10% NA
NAmore50 <- which(NAprop > 0.1)
NAprop[NAmore50]
#View(crime.join[NAmore50])
crime.red <- dplyr::select(crime.join, -c(NAmore50))
crime.red <- dplyr::select(crime.red, -c(cols2drop))
# Now look at rows
# how many NA in the reponse
length(sum(is.na(crime.red$V4399)))
# We drop the 1
crime.red <- crime.red %>% filter(!is.na(V4399))
# How many rows are missing more than 10% of data
NArows <- which(rowSums(is.na(crime.red)) > round(0.1 *ncol(crime.red))) # 425
# Drop these rows
crime.red <- crime.red %>% filter(!row_number() %in% NArows)
#Lets revist our response
table(crime.red$V4399)
# We will drop rows with "Don't know" or "Residue"
crime.red <-
crime.red %>% filter(
V3015 != "(8) Residue" &
V3020 != "(98) Residue" &
V3024 != "(8) Residue" &
V3044 != "(8) Residue" &
V3_V4526H3A != "(8) Residue" &
V3_V4526H3B != "(8) Residue" &
V3_V4526H5 != "(8) Residue" &
V3_V4526H4 != "(8) Residue" &
V3_V4526H6 != "(8) Residue" &
V3_V4526H7 != "(8) Residue" &
V3083 != "(8) Residue" &
V3084 != "(8) Residue" &
V3085 != "(8) Residue" &
V3086 != "(8) Residue" &
V3087 != "(8) Residue" &
V3079 != "(8) Residue" &
V3071 != "(8) Residue" &
V4399 != "(3) Don't know" & V4399 != "(8) Residue"
)
# Any factors with only one level?
#sapply(1:ncol(crime.red), function(i) length(table(crime.red[, i])))
#crime.red %>% group_by(ID) %>% summarise(no_rows= length(ID))
crime.temp.fact <- sapply(crime.red, function(i) if(is.factor(i)) factor(i))
#sapply(crime.temp.fact, levels)
#with(crime.red, table(V3015))
#crime.red[!rowSums(crime.red) == "(8) Residue"]
View(crime.red)
#library(gdata)
#crime.red <- View(gdata::drop.levels(crime.red))
#crime.red <- upData(crime.red, labels = labels.ls)
model1 <- glm(V4399 ~ ., data = crime.red, family = binomial())
summary(model1)
# One does not converge, V3061(1) Yes : lets check it out
table(crime.red$V3061)
# No obvious sign of why no convergence, we will drop
# Lets also reencode Education
crime.red2 <- select(crime.red,-"V3061")
# crime.red2 <-
#   crime.red2 %>% mutate(
#     V3020 = if_else(
#       V3020 == "1:Elementary" |
#         V3020 == "3:Elementary" |
#         V3020 == "4:Elementary" |
#         V3020 == "5:Elementary" |
#         V3020 == "6:Elementary" |
#         V3020 == "7:Elementary" |
#         V3020 == "8:Elementary", "Grade 1-8", V3020)
#     )
library(forcats)
crime.red2 <-
crime.red2 %>% mutate(V3020 = fct_collapse(
V3020,
Mid.Elem = c(
"(01) 1:Elementary",
'(02) 2:Elementary',
'(03) 3:Elementary',
'(04) 4:Elementary',
'(05) 5:Elementary',
'(06) 6:Elementary',
'(07) 7:Elementary',
'(08) 8:Elementary'
),
HS.no.diploma = c(
"(09) 9:High school",
"(10) 10:High school",
"(11) 11:High school",
"(27) 12th grade(no diploma)"
)
))
View(crime.red2)
model2 <- glm(V4399 ~ ., data = crime.red2, family = binomial())
summary(model2)
# Education is not signficant regardless, so we will drop it as well as Month of Interview Completed
crime.red3 <- select(crime.red2,-c("V3020", "V3025"))
model3 <- glm(V4399 ~ ., data = crime.red3, family = binomial())
summary(model3)
# Education is not signficant regardless, so we will drop it as well as Month of Interview Completed
crime.red3 <- select(crime.red2,-c("V3025"))
model3 <- glm(V4399 ~ ., data = crime.red3, family = binomial())
summary(model3)
summary(model2)
model3$family
setwd("~/GitHub/STA223/Homework/HW7")
library(knitr)
# Carry out fit with binomial regression
pima.fit <- glm(Diabetic ~ ., data = pima, family = "binomial")
library(knitr)
pima <- read.table("pima-indians-diabetes.dat", sep = ",")
names(pima) <- c("NPreg", "PGC", "DBP", "Tricep", "Serum.Insulin", "BMI", "Pedigree", "Age", "Diabetic")
# Description of data on page 146
#pima <- pima[,-c(1, 7)]
# Carry out fit with binomial regression
pima.fit <- glm(Diabetic ~ ., data = pima, family = "binomial")
library(knitr)
pima <- read.table("pima-indians-diabetes.dat", sep = ",")
names(pima) <- c("NPreg", "PGC", "DBP", "Tricep", "Serum.Insulin", "BMI", "Pedigree", "Age", "Diabetic")
# Description of data on page 146
pima <- pima[,-c(1, 7)]
# Carry out fit with binomial regression
pima.fit <- glm(Diabetic ~ ., data = pima, family = "binomial")
library(gam)
pima.gam <- gam(Diabetic ~ ., data = pima, family = "binomial")
summary(pima.gam)
data(trees) # n=31, 2 predictors
gamgam1 <- gam::gam(Volume ~ s(Height,4) + s(Girth,5),
family=Gamma(link="log"), data=trees)
# smoothing spline with df=4 for Height and df=5 for Girth.
summary(gamgam1)
trees
kable(pima.fit$coefficients)
kable(pima.fit)
kable(pima.fit$model)
kable(pima.fit$R)
attr(summary(pima.fit))
attributes(summary(pima.fit))
summary(pima.fit)$coefficients
kable(summary(pima.fit)$coefficients)
kable(summary(pima.fit)$coefficients)
pima.gam <- gam(Diabetic ~ s(PGC , 4) + s(DBP , 4) + s(Tricep , 4) + s(Serum.Insulin , 4) + s((BMI) , 4) + s(Age , 4), data = pima, family = "binomial")
summary(pima.gam)
pima.gam <- gam(Diabetic ~ s(PGC , 4) + s(DBP , 4) + s(Tricep , 3) + s(Serum.Insulin , 4) + s((BMI) , 4) + s(Age , 4), data = pima, family = "binomial")
summary(pima.gam)
pima.gam <- gam(Diabetic ~ s(PGC , 4) + s(DBP , 4) + s(Tricep , 4) + s(Serum.Insulin , 4) + s((BMI) , 4) + s(Age , 4), data = pima, family = "binomial")
summary(pima.gam)
summary(pima.gam)$coefficients
sum.gam <- summary(pima.gam)
sum.gam
sum.gam$terms
sum.gam$anova
sum.gam$parametric.anova
kable(sum.gam$parametric.anova)
sum.gam <- summary(pima.gam)
pima.gam <- gam(Diabetic ~ s(PGC , 4) + s(DBP , 4) + s(Tricep , 4) + s(Serum.Insulin , 4) + s((BMI) , 4) + s(Age , 4), data = pima, family = "binomial")
sum.gam <- summary(pima.gam)
kable(sum.gam$parametric.anova)
pima.gam2 <- gam(Diabetic ~ s(PGC , 4) + s(DBP , 1) + s(Tricep , 4) + s(Serum.Insulin , 4) + s((BMI) , 4) + s(Age , 4), data = pima, family = "binomial")
sum.gam2 <- summary(pima.gam2)
kable(sum.gam2$parametric.anova)
pima.gam2 <- gam(Diabetic ~ s(PGC , 4) + DBP + s(Tricep , 4) + s(Serum.Insulin , 4) + s((BMI) , 4) + s(Age , 4), data = pima, family = "binomial")
pima.gam2 <- gam(Diabetic ~ s(PGC , 4) + DBP + s(Tricep , 4) + s(Serum.Insulin , 4) + s((BMI) , 4) + s(Age , 4), data = pima, family = "binomial")
sum.gam2 <- summary(pima.gam2)
kable(sum.gam2$parametric.anova)
library(MASS)
?lda()
library(boot)
?cv.glm
# Logistic classfier with linear predictor
cv.glm(pima, pima.fit, K = 10)
# Logistic classfier with linear predictor
cv.glm(pima, pima.fit, K = 10)$delta
# Logistic classfier with quadtratic predictor
pima.fit2 <- glm(Diabetic ~ (.)^2, data = pima, family = "binomial")
pima.fit2
# Logistic classfier with quadtratic predictor
pima.fit2 <- glm(Diabetic ~ .^2, data = pima, family = "binomial")
pima.fit2
# Logistic classfier with quadtratic predictor
pima.fit2 <- glm(Diabetic ~ .**2, data = pima, family = "binomial")
pima.fit2
# Logistic classfier with quadtratic predictor
pima.fit2 <- glm(Diabetic ~ poly(.,2), data = pima, family = "binomial")
# Logistic classfier with quadtratic predictor
pima.fit2 <- glm(Diabetic ~ PGC^2 + DBP^2  + Tricep^2 + Serum.Insulin^2 + BMI^2 + Age^2, data = pima, family = "binomial")
pima.fit2
summary(pima.fit2)
# Logistic classfier with quadtratic predictor
pima.fit2 <- glm(Diabetic ~ poly(PGC,2) + DBP^2  + Tricep^2 + Serum.Insulin^2 + BMI^2 + Age^2, data = pima, family = "binomial")
summary(pima.fit2)
# Logistic classfier with quadtratic predictor
pima.fit2 <- glm(Diabetic ~ poly(PGC,2) + pol(DBP,2)  + poly(Tricep,2) + poly(Serum.Insulin,2) + poly(BMI,2) + poly(Age,2), data = pima, family = "binomial")
# Logistic classfier with quadtratic predictor
pima.fit2 <- glm(Diabetic ~ poly(PGC,2) + poly(DBP,2)  + poly(Tricep,2) + poly(Serum.Insulin,2) + poly(BMI,2) + poly(Age,2), data = pima, family = "binomial")
summary(pima.fit2)
cv.glm(pima, pima.fit2, K = 10)$delta
# Logistic classfier with linear predictor
cv.glm(pima, pima.fit, K = 10)$delta
cv.glm(pima, pima.fit2, K = 10)$delta
?lda
pred_cv <- pima.lda.cv$class
# LDA
pima.lda.cv <- lda(Diabetic ~ .,pima, CV = TRUE)
pred_cv <- pima.lda.cv$class
table(pred_cv, pima$Diabetic)
table(pred_cv, pima$Diabetic)[1,2]
table(pred_cv, pima$Diabetic)[1,2] + table(pred_cv, pima$Diabetic)[2,1] / sum(table(pred_cv, pima$Diabetic))
sum(table(pred_cv, pima$Diabetic))
table(pred_cv, pima$Diabetic)[1,2] + table(pred_cv, pima$Diabetic)[2,1]
(table(pred_cv, pima$Diabetic)[1,2] + table(pred_cv, pima$Diabetic)[2,1]) / sum(table(pred_cv, pima$Diabetic))
# QDA
pima.qda.cv <- qda(Diabetic ~ .,pima, CV = TRUE)
pred_cvq <- pima.qda.cv$class
(table(pred_cvq, pima$Diabetic)[1,2] + table(pred_cvq, pima$Diabetic)[2,1]) / sum(table(pred_cvq, pima$Diabetic))
cv.glm(pima, pima.fit2, K = 10)$delta
library(MASS)
library(boot)
# Logistic classfier with linear predictor
#cv.glm(pima, pima.fit, K = 10)$delta
# Logistic classfier with quadtratic predictor
pima.fit2 <- glm(Diabetic ~ poly(PGC,2) + poly(DBP,2)  + poly(Tricep,2) + poly(Serum.Insulin,2) + poly(BMI,2) + poly(Age,2), data = pima, family = "binomial")
#cv.glm(pima, pima.fit2, K = 10)$delta
# LDA
pima.lda.cv <- lda(Diabetic ~ .,pima, CV = TRUE)
pred_cv <- pima.lda.cv$class
#(table(pred_cv, pima$Diabetic)[1,2] + table(pred_cv, pima$Diabetic)[2,1]) / sum(table(pred_cv, pima$Diabetic))
# QDA
pima.qda.cv <- qda(Diabetic ~ .,pima, CV = TRUE)
pred_cvq <- pima.qda.cv$class
#(table(pred_cvq, pima$Diabetic)[1,2] + table(pred_cvq, pima$Diabetic)[2,1]) / sum(table(pred_cvq, pima$Diabetic))
